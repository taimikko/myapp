{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/lomake/lomake.component.css","webpack:///./src/app/lomake/lomake.component.html","webpack:///./src/app/lomake/lomake.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/tulokset/tulokset.component.css","webpack:///./src/app/tulokset/tulokset.component.html","webpack:///./src/app/tulokset/tulokset.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+I;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACP;AACa;AAShE;IAoBE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAnB5C,UAAK,GAAG,KAAK,CAAC;IAoBd,CAAC;IAhBD,+BAAQ,GAAR,UAAS,MAAM;QAAf,iBASC;QARC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAC/B,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,YAAY,CACpB,CAAC,IAAI,CAAC;YACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,KAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,kBAAkB;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAChC,CAAC;IAKD,gCAAS,GAAT,UAAU,MAAM;QAAhB,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAC/B,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,OAAO,CACf,CAAC,IAAI,CAAC;YACL,mEAAmE;YACnE,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,KAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAhC6B;QAA7B,+DAAS,CAAC,8EAAiB,CAAC;kCAAW,8EAAiB;kDAAC;IAF/C,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAuBiC,kEAAW;OApBjC,YAAY,CAmCxB;IAAD,mBAAC;CAAA;AAnCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX+B;AACE;AACjB;AAEM;AACa;AACM;AAErB;AACO;AAE+C;AACtB;AAsB7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,8EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4FAAuB;gBACvB,qEAAgB;gBAChB,iEAAe;gBACf,gEAAc;gBACd,gEAAc;gBACd,+DAAa;aACd;YACD,SAAS,EAAE,CAAC,kEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClCtB,mB;;;;;;;;;;;ACAA,ojBAAojB,GAAG,kH;;;;;;;;;;;;;;;;;;;;;;;;ACA/e;AASxE;IAIE;QADA,gBAAW,GAAG,CAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,CAAE,CAAC;QAO3D,WAAM,GAAG,IAAI,0DAAY,EAAO,CAAC;IAL3C,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAGD,gCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IARS;QAAT,4DAAM,EAAE;;mDAAkC;IAVhC,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OAEW,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AACoB;AAK/D;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAClC,sCAAgB,GAAvB,UAAwB,IAAY,EAAE,YAAoB;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,oBAAoB,EACzC,EAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAC,CACzC,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;IACM,iCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IATU,WAAW;QADvB,gEAAU,EAAE;yCAEe,+DAAU;OADzB,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;ACNxB,mB;;;;;;;;;;;ACAA,mDAAmD,cAAc,sDAAsD,MAAM,IAAI,MAAM,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAhF;AACH;AAQpD;IAKE,2BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,2CAAe,GAAtB;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YAC3C,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,yCAAa,GAArB,UAAsB,QAAQ;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAE,wBAAwB;QAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAvBQ;QAAR,2DAAK,EAAE;;2DAAc;IADX,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOiC,kEAAW;OALjC,iBAAiB,CAyB7B;IAAD,wBAAC;CAAA;AAzB6B;;;;;;;;;;;;;;ACT9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-lomake (valmis)=\\\"onValmis($event)\\\"></app-lomake>\\n<app-tulokset [supersankari]=\\\"supersankari\\\"></app-tulokset>\\n\\n\\n\"","import {Component, Input, ViewChild} from '@angular/core';\nimport {DataService} from './services/data.service'\nimport {TuloksetComponent} from './tulokset/tulokset.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'app';\n  @ViewChild(TuloksetComponent) tulokset: TuloksetComponent;\n  supersankari: string;\n\n  onValmis($event) {\n    this.supersankari = $event.supersankari;\n    this.dataService.postSupersankari(\n      $event.nimi,\n      $event.supersankari\n    ).then(() => {\n      console.log(\"Tallennus onnistui\");\n      this.tulokset.paivitaTulokset(); //päivitä tulokset\n    });\n  }\n\n  painallus() {\n    this.title = this.title + '!';\n  }\n\n  constructor(private dataService: DataService) {\n  }\n\n  onValinta($event) {\n    this.dataService.postSupersankari(\n      $event.nimi,\n      $event.sankari\n    ).then(() => {\n      // nuolisyntaksin kanssa this viittaa oikeaan paikkaan, käytä sitä!\n      this.supersankari = $event.supersankari;\n      this.tulokset.paivitaTulokset();\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LomakeComponent } from './lomake/lomake.component';\nimport { TuloksetComponent } from './tulokset/tulokset.component';\n\nimport { FormsModule } from '@angular/forms';\nimport {DataService} from \"./services/data.service\";\n\nimport { MatButtonModule, MatInputModule, MatRadioModule, MatCardModule } from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LomakeComponent,\n    TuloksetComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRadioModule,\n    MatCardModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"laheta()\\\">\\n  <h1>Suosikki supersankari</h1>\\n  <p>lomake.component.html</p>\\n  <div class=kuka>\\n    <label for=\\\"nimi-input\\\">Nimi:</label>\\n    <!--<input id=\\\"nimi-input\\\" type=\\\"text\\\" name=\\\"nimi\\\" placeholder=\\\"Anna nimesi\\\" class=nimi>-->\\n    <input type=\\\"text\\\" name=\\\"nimi\\\" placeholder=\\\"Anna nimesi\\\" [(ngModel)]=\\\"nimi\\\">\\n    <br>\\n  </div>\\n  <div *ngFor=\\\"let v of vaihtoehdot\\\">\\n    <input [id]=\\\"v\\\" type=\\\"radio\\\" name=\\\"supersankari\\\" [value]=\\\"v\\\" [(ngModel)]=\\\"supersankari\\\">\\n    <label [for]=\\\"v\\\">{{v}}</label>\\n  </div>\\n  <mat-card>\\n    <button mat-button>Paina tästä napista</button>\\n  </mat-card>\\n</form>\\n\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-lomake',\n  templateUrl: './lomake.component.html',\n  styleUrls: ['./lomake.component.css']\n})\n\nexport class LomakeComponent implements OnInit {\n  nimi: string;\n  supersankari: string;\n  vaihtoehdot = [ \"Superhessu\", \"Mustanaamio\", \"Teräsmies\", \"Batman\" ];\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  @Output() valmis = new EventEmitter<any>();\n  laheta() {\n    this.valmis.emit({\n      nimi: this.nimi,\n      supersankari: this.supersankari\n    });\n    console.log(\"Lomakkeen tiedot pitäis lähettää johonkin\");\n    console.log(\"Nimi:\", this.nimi);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpResponse } from '@angular/common/http';\n// import { Client, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class DataService {\n  constructor(private http: HttpClient) { }\n  public postSupersankari(nimi: string, supersankari: string): Promise<any> {\n    return this.http.post( '/supersankari_json',\n      {nimi: nimi, supersankari: supersankari}\n    ).toPromise();\n  }\n  public haeTulokset() {\n    return this.http.get('/tulokset').toPromise();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"Suosikkisupersankarisi on siis {{supersankari}}.\\n<ul>\\n  <li *ngFor=\\\"let t of tuloslista\\\">\\n    {{t[0]}}: {{t[1]}}\\n  </li>\\n</ul>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {DataService} from '../services/data.service'\n\n@Component({\n  selector: 'app-tulokset',\n  templateUrl: './tulokset.component.html',\n  styleUrls: ['./tulokset.component.css']\n})\n\nexport class TuloksetComponent implements OnInit {\n  @Input() supersankari;\n\n  tuloslista: any[];\n\n  constructor(private dataService: DataService) {\n  }\n\n  ngOnInit() {\n    this.paivitaTulokset();\n  }\n\n  public paivitaTulokset() {\n    this.dataService.haeTulokset().then((response) => {\n      this.asetaTulokset(response);\n    });\n  }\n\n  private asetaTulokset(tulokset) {\n    console.log(tulokset);\n    this.tuloslista = [];  // tyhjentää tuloslistan\n    for (let t in tulokset) {\n      this.tuloslista.push([t, tulokset[t]]);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}